<?php

namespace Domains\Product\Requests;

use Domains\Product\Models\Product;

/**
 * @property string name
 * @property string description
 * @property string sku
 * @property mixed price
 * @property string barcode
 * @property mixed created_at
 * @property mixed updated_at
 * @property array category_ids
 */

class ProductStoreRequest extends \Illuminate\Foundation\Http\FormRequest
{
    public function rules(): array
    {
        return [
            'name'          => 'required|array',
            'name.*'        => 'required|string|min:3|max:255',
            'description'   => 'nullable|array',
            'description.*' => 'nullable|string|min:3|max:255',
            'sku'           => 'required|string|min:5|max:255|unique:'. Product::class,
            'price'         => 'required|numeric',
            'unit'          => 'nullable|string|max:255',
            'barcode'       => 'nullable|string|min:12|max:14,unique:products,barcode',
            'created_at'    => 'nullable|date',
            'updated_at'    => 'nullable|date',
            'category_ids' => ['array'], // массив категорий
            'category_ids.*' => ['exists:categories,id'], // каждая категория должна существовать
        ];
    }

    public function authorize(): bool
    {
        return true;
    }

    public function messages()
    {
        $parent_messages = parent::messages(); // TODO: Change the autogenerated stub

        $locales = config('app.locales');
        $messages = [];
        foreach ($locales as $locale) {
            $messages["name.$locale.required"] = __('validation.required', ['attribute' => __('app.label.names') . " ($locale)"]);
            $messages["name.$locale.string"] = __('validation.string', ['attribute' => __('app.label.names') . " ($locale)"]);
            $messages["name.$locale.min"] = __('validation.min.string', ['attribute' => __('app.label.names') . " ($locale)", 'min' => 3]);
            $messages["name.$locale.max"] = __('validation.max.string', ['attribute' => __('app.label.names') . " ($locale)", 'max' => 255]);
        }

        return array_merge($parent_messages, $messages);
    }
}
